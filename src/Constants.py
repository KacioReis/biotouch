import os

WORDID_USERID_MAP = "wordid_userid_map"
USERID_USERDATA_MAP = "userid_userdata_map"
# ***************** json fields ***************** #
DATE = "date"

MOVEMENT_POINTS = "movementPoints"
TOUCH_DOWN_POINTS = "touchDownPoints"
TOUCH_UP_POINTS = "touchUpPoints"
SAMPLED_POINTS = "sampledPoints"

WORD_NUMBER = "wordNumber"

TIME = "time"
COMPONENT = "component"
X = "x"
Y = "y"

SESSION_DATA = "sessionData"
NAME = "name"
SURNAME = "surname"
AGE = "age"

GENDER = "gender"
HANDWRITING = "handwriting"
ID = "id"
TOTAL_WORD_NUMBER = "totalWordNumber"

DEVICE_DATA = "deviceData"
DEVICE_FINGERPRINT = "deviceFingerPrint"
DEVICE_MODEL = "deviceModel"
HEIGHT_PIXELS = "heigthPixels"
WIDTH_PIXELS = "widthPixels"
XDPI = "xdpi"
YDPI = "ydpi"

# Json structure

JSON_FIELDS = [
    DATE,
    MOVEMENT_POINTS,
    TOUCH_DOWN_POINTS,
    TOUCH_UP_POINTS,
    SAMPLED_POINTS,
    WORD_NUMBER,
    SESSION_DATA,
]

SESSION_DATA_FIELDS = [
    NAME,
    SURNAME,
    AGE,
    GENDER,
    HANDWRITING,
    ID,
    TOTAL_WORD_NUMBER,
    DEVICE_DATA,
]

DEVICE_DATA_FIELDS = [
    DEVICE_FINGERPRINT,
    DEVICE_MODEL,
    HEIGHT_PIXELS,
    WIDTH_PIXELS,
    XDPI,
    YDPI,
]

POINTS = [
    COMPONENT,
    X,
    Y,
]

TIMED_POINTS = POINTS + [TIME]

# *********************************************** #


BASE_FOLDER = "../res/"
BASE_GENERATED_FOLDER = "../res/generated"
BIOTOUCH_FOLDER = BASE_FOLDER + "Biotouch"

JSON_EXTENSION = ".json"
CSV_EXTENSION = ".csv"
PICKLE_EXTENSION = ".pickle"

DATAFRAME_TYPE = "dataframe"
FEATURE_TYPE = "features"

BUILD_PATH = lambda base, file, desc, ext: os.path.join(base, file + "_" + desc + ext)

BUILD_DATAFRAME_PICKLE_PATH = lambda file: os.path.join(BASE_GENERATED_FOLDER, file + "_" + DATAFRAME_TYPE + PICKLE_EXTENSION)
BUILD_DATAFRAME_CSV_PATH = lambda file: os.path.join(BASE_GENERATED_FOLDER, file + "_" + DATAFRAME_TYPE + CSV_EXTENSION)

BUILD_FEATURE_PICKLE_PATH = lambda file: os.path.join(BASE_GENERATED_FOLDER, file + "_" + FEATURE_TYPE + PICKLE_EXTENSION)
BUILD_FEATURE_CSV_PATH = lambda file: os.path.join(BASE_GENERATED_FOLDER, file + "_" + FEATURE_TYPE + CSV_EXTENSION)

PATHS_FUN = {DATAFRAME_TYPE: {PICKLE_EXTENSION: BUILD_DATAFRAME_PICKLE_PATH, CSV_EXTENSION: BUILD_DATAFRAME_CSV_PATH},
             FEATURE_TYPE: {PICKLE_EXTENSION: BUILD_FEATURE_PICKLE_PATH, CSV_EXTENSION: BUILD_FEATURE_CSV_PATH}}

# WORDID_USERID_CSV_FILE = _path_build("wordid_userd_id" + _dataframe_csv)
# USERID_USERDATA_CSV_FILE = _path_build("userid_userdata" + _dataframe_csv)
# TOUCH_UP_POINTS_CSV_FILE = _path_build(TOUCH_UP_POINTS + _dataframe_csv)
# TOUCH_DOWN_POINTS_CSV_FILE = _path_build(TOUCH_DOWN_POINTS + _dataframe_csv)
# MOVEMENT_POINTS_CSV_FILE = _path_build(MOVEMENT_POINTS + _dataframe_csv)
# SAMPLED_POINTS_CSV_FILE = _path_build(SAMPLED_POINTS + _dataframe_csv)

WORDID_USERID_PICKLE_FILE = BUILD_PATH(BASE_GENERATED_FOLDER, "wordid_userd_id", DATAFRAME_TYPE, PICKLE_EXTENSION)
USERID_USERDATA_PICKLE_FILE = BUILD_PATH(BASE_GENERATED_FOLDER, "userid_userdata", DATAFRAME_TYPE, PICKLE_EXTENSION)
TOUCH_UP_POINTS_PICKLE_FILE = BUILD_PATH(BASE_GENERATED_FOLDER, TOUCH_UP_POINTS, DATAFRAME_TYPE, PICKLE_EXTENSION)
TOUCH_DOWN_POINTS_PICKLE_FILE = BUILD_PATH(BASE_GENERATED_FOLDER, TOUCH_DOWN_POINTS, DATAFRAME_TYPE, PICKLE_EXTENSION)
MOVEMENT_POINTS_PICKLE_FILE = BUILD_PATH(BASE_GENERATED_FOLDER, MOVEMENT_POINTS, DATAFRAME_TYPE, PICKLE_EXTENSION)
SAMPLED_POINTS_PICKLE_FILE = BUILD_PATH(BASE_GENERATED_FOLDER, SAMPLED_POINTS, DATAFRAME_TYPE, PICKLE_EXTENSION)

WORD_ID = "word_id"
USER_ID = "user_id"

# Utils
WORD_ID_POINTS = POINTS + [WORD_ID]
WORD_ID_TIMED_POINTS = TIMED_POINTS + [WORD_ID]
POINTS_SERIES_TYPE = [MOVEMENT_POINTS, TOUCH_DOWN_POINTS, TOUCH_UP_POINTS, SAMPLED_POINTS]
TIMED_POINTS_SERIES_TYPE = [MOVEMENT_POINTS, TOUCH_DOWN_POINTS, TOUCH_UP_POINTS]
DATAFRAMES = [WORDID_USERID_MAP, USERID_USERDATA_MAP] + POINTS_SERIES_TYPE


# *********************************************** #
